{"name":"Switchboard","body":"Switchboard - easy A/B testing for your mobile app\r\n===\r\n\r\n## What it does\r\nSwitchboard is a simple way to remote control your mobile application even after you shipped it to your users'\r\ndevices.\r\nUse switchboard to\r\n* Stage-rollout new features to users\r\n* A/B-test user flows, messaging, colors, features\r\n* anything you want to remote-control\r\n\r\nSwitchboard lets you control what happens in your app. Quick, easy, useful.\r\n\r\n*Switchboard segments your users consistently.* Because user segmentation is based only on UUID that is computed once, the experience you switch on and off using Switchboard is consistent across sessions.\r\n\r\n## What it does not do (what you have to do yourself)\r\nSwitchboard does not give you analytics, nor does it automatic administration and optimization of your A/B tests. It also doesn't give you nice graphs and stuff. You can get all of that by plugging an analytics package into your app which you're probably doing anyway.\r\n\r\n## Features\r\n* Consistent user segmentation based on device ID\r\n* Define experiments for specific application versions, OS version, language settings and more\r\n* Comes with build in configuration for production and staging environment\r\n* Highly scalable\r\n* Safe when device is offline\r\n* Flexible custom parameters for experiments\r\n\r\n## What Switchboard was designed for\r\nSwitchboard was design as a super light weight and very flexible mobile A/B testing framework. \r\n### Infrastructure\r\nThe goal was to serve millions of requests very reliable without much infrastructure. It should easy scale horizontally to avoid overhead in\r\nmaintaining it while your application scales. It is designed without a database or any other type of persistent storage that would slow\r\nit down.\r\n### User segmentation\r\nConsistency in user segmentation is one of the most important things in A/B testing. This means that one individual user will always have a consistent experience\r\n over time. Switchboard does consistent user segmentation based on a unique device id.\r\n\r\n## How to use it\r\n### Client\r\nThe Switchboard client lib is available for android and iOS. The following examples give you a brief overview on how to get started. You can find a more in depth \r\ndocumentation under the [Wiki](https://github.com/KeepSafe/Switchboard/wiki)\r\n\r\n#### Android\r\nLink the Switchboard project to your andorid project as a library project. You only need to initialize the Switchboard core at the application start once. \r\nThen, you can add switches to your app and have the Switchboard give you the current state.\r\n\r\nYou can customize the DynamicConfigManager to send all sorts of information to the Switchboard server for control decisions, e.g. location, OS version, device, language.\r\n\r\nHere's some on/off switch example code on Android:\r\n\r\n```java\r\n  \tContext myContext = this.getApplicationContext();\r\n\tString experimentName = \"showSmiley\";\r\n\t\r\n\t//get settings from Switchboard\r\n\tboolean isSmiling = Switchboard.isInExperiment(myContext, experimentName);\r\n\r\n\t//Switching code for testing\r\n\tif (isSmiling) //variant A\r\n\t\tshowSmileyWelcomeMessage();\r\n\telse //variant B\r\n\t\tshowFrownyFace();\r\n```\r\n\r\nAnd it works for varying any value too. Again, on Android:\r\n\r\n```java\r\n\tif (isSmiling) {\r\n\t\tif(Switchboard.hasExperimentValues(myContext, experimentName)) {\r\n\t\t\t\r\n\t\t\t//get remote controlled values from Switchboard\r\n\t\t\tJSONObject smileValues = Switchboard.getExperimentValueFromJson(myContext, experimentName);\r\n\r\n\t\t\tint smileWidth = smileValues.getInt(\"width\");\r\n\r\n\t\t\t//do something with it\r\n\t\t\tprepareSmiley(smileWidth);\r\n\t\t\tshowSmileyWelcomeMessage();\r\n\t\t}\r\n\t}\r\n```\r\n\r\n#### iOS\r\nPlease look at the iOS sample implementation under [client/ios/SwitchboardSample](https://github.com/KeepSafe/Switchboard/tree/master/client/ios/SwitchboardSample)\r\n\r\n### Server\r\nThe server receives a UUID that the client generated as well as many other parameters like app version, OS version, device language, location.\r\nUsers are divided into 100 consistent user buckets. Switchboard makes it incredible easy to write new tests based on the given parameters.\r\n\r\nExample code of the PHP implementation for a simple on/off switch:\r\n\r\n```php\r\n\t$manager = new SwitchboardManager($_GET);\r\n\t\r\n\t//put 50% of your users into the showSmiley A/B test\r\n\t$resultArray['showSmiley'] = $manager->turnOnBucket(0, 50);\r\n\r\n\t//return result array as JSON\r\n\t$manager->renderResultJson($resultArray);\r\n```\r\n\r\nYou can do more complex things if you want:\r\n\r\n```php\r\n\t$manager = new SwitchboardManager($_GET);\r\n\t$experiments = new SwitchboardExperiments($manager);\r\n\t\r\n\t//put a percentage of users in the test and vary smile width\r\n\t$resultArray['showSmiley'] = $experiments->smileyVariation($uuid, $lang);\r\n\t\r\n\t//return result array as JSON\r\n    $manager->renderResultJson($resultArray);\r\n\t\r\n\tclass SwitchboardExperiments {\r\n\t\tfunction smileyVariation($uuid, $lang){\r\n\r\n\t\t\t//turn it on for 50% only\r\n\t\t\tif ($this->$manager->isInBucket($uuid, 0, 50)){\r\n\r\n\t\t\t\t$values = array();\r\n\t\t\t\t//and then vary the values\r\n\t\t\t\tif ($this->$manager->$lang == \"eng\"){ //broad smiles in US\r\n\t\t\t\t\t$values['width'] = 10;\r\n\t\t\t\t} else if ($this->$manager->$lang == \"deu\"){ //more subtle in Germany\r\n\t\t\t\t\t$values['width'] = 9;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn $this->$manager->inactiveExperimentReturnArray();\r\n\t\t\t\t}\r\n\t\t\t\treturn $this->$manager->activeExperimentReturnArray($values);\r\n\t\t\t}\r\n\r\n\t\t\t//default\r\n\t\t\treturn $this->$manager->inactiveExperimentReturnArray();\r\n\t\t}\r\n\t}\r\n```\r\n\r\n## Problems & Bugs\r\nPlease us the [Github Issue tracker](https://github.com/KeepSafe/Switchboard/issues) to commit bugs\r\n\r\n## License\r\nSwitchboard is licensed under the [Apache Software License, 2.0 (\"Apache 2.0\")](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n## Authors\r\nSwitchboard is brought to you by [Philipp Berner](https://github.com/philippb) and [Zouhair Belkoura](https://github.com/zouhairb), founders of KeepSafe.\r\nWe'd love to have you contribute.\r\n\r\n## Contributors\r\nSpecial thanks goes to our contributors\r\n\r\n- [Chris Beauchamp](https://github.com/cjbeauchamp)\r\n\r\n## Used in production by\r\n* KeepSafe (www.getkeepsafe.com)","tagline":"Switchboard - easy and super light weight A/B testing for your mobile app. This mobile A/B testing framework allows you with minimal servers to run large amounts of mobile users.","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-25612652-5"}